{"version":3,"sources":["component/Navbar.js","component/TextForm.js","component/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","home","onClick","CustomTheme","role","htmlFor","CustomTheme1","CustomTheme2","togglemode","TextForm","useState","text","setText","style","color","heading","backgroundColor","value","onChange","event","target","rows","newText","toUpperCase","alertShow","toLowerCase","split","length","defaultProps","about","contact","Alert","alert","msg","App","setmode","mode1","setmode1","mode2","setmode2","mode3","setmode3","setAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b155f437.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"/navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">{props.home}</Link> */}\r\n                            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">{props.home}</a>\r\n                        </li>\r\n                        {/* <li className=\"nav-item\">\r\n                            <Link className=\"nav-link active\" aria-current=\"page\" to=\"/about\">{props.about}</Link>\r\n                        </li> */}\r\n                        {/* <li className=\"nav-item\">\r\n                            <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">{props.contact}</a>\r\n                        </li> */}\r\n                    </ul>\r\n\r\n                    <div className={`form-check form-switch mx-2 text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n                        <input className=\"form-check-input\" type=\"checkbox\" onClick={props.CustomTheme} role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Green Mode</label>\r\n                    </div>\r\n\r\n                    <div className={`form-check form-switch mx-2 text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n                        <input className=\"form-check-input\" type=\"checkbox\" onClick={props.CustomTheme1} role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Yellow Mode</label>\r\n                    </div>\r\n\r\n                    <div className={`form-check form-switch mx-2 text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n                        <input className=\"form-check-input\" type=\"checkbox\" onClick={props.CustomTheme2} role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Red Mode</label>\r\n                    </div>\r\n\r\n                    <div className={`form-check form-switch mx-2 text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n                        <input className=\"form-check-input\" type=\"checkbox\" onClick={props.togglemode} role=\"switch\" id=\"flexSwitchCheckDefault\" />\r\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Dark Mode</label>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    about: PropTypes.string,\r\n    contact: PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'set title here',\r\n    about: 'set about here',\r\n    contact: 'set about here'\r\n}","import React,{useState} from 'react'\r\n\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = () =>{\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.alertShow(\"converted to uppercase\",\"success\");\r\n    }\r\n\r\n    const handleLoClick = () =>{\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.alertShow(\"converted to lowercase\",\"success\");\r\n    }\r\n\r\n    const handleClearClick = () =>{\r\n        let newText = '';\r\n        setText(newText);\r\n        props.alertShow(\"All text clear\",\"success\");\r\n    }\r\n\r\n    const handleOnChange = (event) =>{\r\n        setText(event.target.value);\r\n    }\r\n\r\n\r\n    const [text,setText] = useState(\"\");\r\n    return (\r\n        <>\r\n        <div className=\"container\"  style={{color: props.mode === 'dark' ? 'white':'#1b2d4c'}}>\r\n            <br/>\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n            <textarea className=\"form-control\" style={{backgroundColor: props.mode === 'dark' ? '#1b2d4c':'white',color: props.mode === 'dark' ? 'white':'#1b2d4c'}}value={text} onChange={handleOnChange} id=\"myBox\" rows=\"10\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-2\"  onClick={handleUpClick}>Convert to uppercase</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleLoClick}>Convert to lowercase</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleClearClick}>Clear text</button>\r\n        </div>\r\n        <div className=\"container my-3\" style={{color: props.mode === 'dark' ? 'white':'#1b2d4c'}}>\r\n            <h1>Your text summary</h1>\r\n            <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n            <p>{0.008 * text.split(\" \").length} minutes read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0 ? text:\"Enter something above to preview here\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    return (\r\n        props.alert &&\r\n        <div>\r\n             <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{props.alert.msg}</strong>\r\n            </div>\r\n        </div>\r\n        // {props.alert.type}\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\n// import About from './component/About';\nimport Navbar from './component/Navbar';\nimport TextForm from './component/TextForm';\nimport React, { useState } from 'react'\nimport Alert from './component/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   // Link\n// } from \"react-router-dom\";\n\n\n\nfunction App() {\n  const [mode, setmode] = useState('light'); //it tells whether our app is in dark mode or light mode\n\n  const [mode1, setmode1] = useState('light');\n  const [mode2, setmode2] = useState('light');\n  const [mode3, setmode3] = useState('light');\n  // const [mode4, setmode4] = useState('violet'); \n\n  // const [textmode, settextmode] = useState('dark');\n\n  const [alert, setAlert] = useState(null);\n\n  const alertShow = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n\n\n  const togglemode = () => {\n    if (mode === 'light') {\n      setmode('dark');\n      document.body.style.backgroundColor = '#1b2d4c';\n      alertShow(\"Dark mode has been enabled\", \"success\");\n    }\n    else {\n      setmode('light');\n      document.body.style.backgroundColor = 'white';\n      alertShow(\"Light mode has been enabled\", \"success\");\n    }\n  }\n\n\n  const CustomTheme = () => {\n    if (mode1 === 'light') {\n      setmode1('green');\n      document.body.style.backgroundColor = '#198754';\n    }\n    else {\n      setmode1('white');\n      document.body.style.backgroundColor = 'white';\n    }\n  }\n\n  const CustomTheme1 = () => {\n    if (mode2 === 'light') {\n      setmode2('yellow');\n      document.body.style.backgroundColor = 'yellow';\n    }\n    else {\n      setmode2('white');\n      document.body.style.backgroundColor = 'white';\n    }\n  }\n\n  const CustomTheme2 = () => {\n    if (mode3 === 'light') {\n      setmode3('red');\n      document.body.style.backgroundColor = 'red';\n    }\n    else {\n      setmode3('white');\n      document.body.style.backgroundColor = 'white';\n    }\n  }\n\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar title=\"CodeWithMixxz\" mode={mode} mode1={mode1} mode2={mode2} mode3={mode3} home=\"Home\" CustomTheme={CustomTheme} CustomTheme1={CustomTheme1} CustomTheme2={CustomTheme2} togglemode={togglemode} about=\"AboutUs\" contact=\"ContactUs\" />\n        <Alert alert={alert} />\n        <div className=\"container\">\n          {/* <Switch> */}\n            {/* <Route exact path=\"/about\"> */}\n              {/* <About /> */}\n            {/* </Route> */}\n            {/* <Route exact path=\"/\"> */}\n              <TextForm alertShow={alertShow} mode={mode} mode1={mode1} mode2={mode2} mode3={mode3} />\n            {/* </Route> */}\n          {/* </Switch> */}\n        </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}